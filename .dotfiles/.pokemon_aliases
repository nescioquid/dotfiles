# POKEMON_ALIASES

# short forms
alias gle='gloge'
alias gse='gswe'

# ---

# opens main notes file
alias pokenotes='nano ~/repos/pokemon/notes/notes.md'
alias vscpokenotes='code ~/repos/pokemon/notes/notes.md'

# manages the save file
alias tossit='tossit() { mv -fvt ~/.local/share/Trash/files/tossed/ pokeemerald.sav ; }; tossit'
alias takeit='move pokeemerald.sav ~/repos/pokemon/last-save/'
alias giveit='move ~/repos/pokemon/last-save/pokeemerald.sav ~/repos/pokeemerald/'
alias hasit='f pokeemerald.sav'
alias copyit='copy pokeemerald.sav ~/repos/pokemon/last-save/'

# 'make' is overridden for speed reasons
# the command to find the j# is 'nproc'
alias make='make -j$(nproc)'
# alias maake='make -j'
alias makke='make clean && make -j$(nproc)'
# alias maakke='make clean && make -j'

# faster logging and switching for common branches
alias gloge='glog expansion'
alias gswe='gsw expansion'

# copies the gba file to a file for versioned roms
alias publishit='publishit() { copy ~/repos/pokeemerald/pokeemerald.gba ~/repos/pokemon/gt-roms/gt-"$1".gba; }; publishit'

# changes commit author to nescioquid
# HEAD must be on the commit to be amended
# alias gcnescio='gc --amend --author=nescioquid'

# (re)adds poryscript executable
alias addporyscript='cp -irv ~/repos/pokemon/poryscript/poryscript tools/poryscript/'
alias addpory='cp -irv ~/repos/pokemon/poryscript/poryscript tools/poryscript/'
alias addp='cp -irv ~/repos/pokemon/poryscript/poryscript tools/poryscript/'

# checks out a tagged release of expansion
alias gcoe='gcoe() { git checkout expansion/"$1"; }; gcoe'

# completely resets a poryscript map file to where it should go and reworks the git index
# alias porymv='porymv() {
#   local map="$1"
#   local mapdir="data/maps/$map"
#   local incfile="$mapdir/scripts.inc"
#   local porysrc="data/scripts/pory_scripts/maps/$map.pory"
#   local porydest="$mapdir/scripts.pory"

#   # Add ignore rule relative to data/maps
#   echo "$map/scripts.inc" >> data/maps/.gitignore
#   git add data/maps/.gitignore

#   # Move .pory file
#   mv "$porysrc" "$porydest"

#   # Prepend scripts.inc wrapped in raw` ... `
#   if [[ -f "$incfile" ]]; then
#     {
#       echo "raw\`"
#       cat "$incfile"
#       echo "\`"
#       echo ""
#       cat "$porydest"
#     } > "$porydest.tmp" && mv "$porydest.tmp" "$porydest"
#   fi

#   # Forget old files in Git
#   git rm --cached "$porysrc" 2>/dev/null
#   git rm --cached "$incfile" 2>/dev/null

#   # Delete the file locally (it will regenerate on build)
#   # rm -f "$incfile"

#   # Remove the exact .include line for this map from pory_scripts.inc
#   sed -i "/^\.include \"data\/scripts\/pory_scripts\/maps\/$map\.inc\"$/d" data/scripts/pory_scripts.inc
# }; porymv'

# function used to refactor all of pory_scripts/maps/ to their respective directires in data/maps/
# porymva() {
# grep '^\.include "data/scripts/pory_scripts/maps/.*\.inc"$' data/scripts/pory_scripts.inc | \
# sed -E 's#^\.include "data/scripts/pory_scripts/maps/(.*)\.inc"$#\1#' | \
# while read -r map; do
#     echo "Processing map: $map"

#     mapdir="data/maps/$map"
#     incfile="$mapdir/scripts.inc"
#     porysrc="data/scripts/pory_scripts/maps/$map.pory"
#     porydest="$mapdir/scripts.pory"

#     # Add ignore rule safely
#     grep -qxF "$map/scripts.inc" data/maps/.gitignore || echo "$map/scripts.inc" >> data/maps/.gitignore
#     git add data/maps/.gitignore

#     # Move .pory file
#     mv "$porysrc" "$porydest"

#     # Prepend scripts.inc
#     if [[ -f "$incfile" ]]; then
#       {
#         echo "raw\`"
#         cat "$incfile"
#         echo "\`"
#         echo ""
#         cat "$porydest"
#       } > "$porydest.tmp" && mv "$porydest.tmp" "$porydest"
#     fi

#     # Forget old files in Git
#     git rm --cached "$porysrc" 2>/dev/null
#     git rm --cached "$incfile" 2>/dev/null

#     # Delete the file locally
#     # rm -f "$incfile"

#     # Remove the exact .include line
#     sed -i "/^\.include \"data\/scripts\/pory_scripts\/maps\/$map\.inc\"$/d" data/scripts/pory_scripts.inc

# done
# }
